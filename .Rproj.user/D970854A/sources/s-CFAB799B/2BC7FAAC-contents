---
title: "20200615-2"
author: '"陳筱汶"'
date: "2020/6/15"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
```{r}
if(!require(lubridate)){ # condition: 是否「沒安裝lubridate」？
  install.packages("lubridate")
}
lubridate::ymd_hms("2020-07-01 13:00:00 GMT")
```

```{r}
if(!require(lubridate)){install.packages("lubridate")}
```
```{r}
twDate <-  c("民國108年12月5日","民國98年10月5日")

library(stringr)
# 準備regex: 
## 取出：「前有」民國，「後有」年的「數字」「們」
## "(?<={A_regex}){target_regex}(?={B_regex})"

## 如果同學已經很熟就可以直接寫
regex_pattern <-
  "(?<=民國)[0-9]+(?=年)"

# 取出民國年，計算西元年
year <- 
  str_extract(
    twDate,
    regex_pattern)
westernYear <- as.integer(year)+1911

# 替換民國xx年的xx成西元年數字
str_replace(
  twDate,
  regex_pattern,  # 要換掉的文字
  as.character(westernYear) # 要替換的內容
) -> twDate_reformat
print(twDate_reformat)


lubridate::ymd(twDate_reformat)
```
```{r}
convert_TaiwanDate2WesternDate <- function(twDate){
  library(stringr)
  if(!require(lubridate)){install.packages("lubridate")}
  if(!require(stringr)){install.packages("stringr")}
  regex_pattern <-
    "(?<=民國)[0-9]+(?=年)"
  
  # 取出民國年，計算西元年
  year <- 
    str_extract(
      twDate,
      regex_pattern)
  westernYear <- as.integer(year)+1911
  
  # 替換民國xx年的xx成西元年數字
  str_replace(
    twDate,
    regex_pattern,  # 要換掉的文字
    as.character(westernYear) # 要替換的內容
  ) -> twDate_reformat
  
  lubridate::ymd(twDate_reformat) -> westernDate
  return(westernDate)
}

twDate <-  c("民國108年12月5日","民國98年10月5日")
convert_TaiwanDate2WesternDate(twDate)
```
```{r}
# 測試
check_package("clipr")
check_package("SOAR")
```

```{r}
check_package<- function(pkgName){installs<-if(!require(pkgName)){install.packages(pkgName)}}
```

```{r}
n<-15
if((n%%2)==1){
  fvalue<- -(n+1)/2
} else{fvalue<-n/2}
```

```{r}
n <- 54
if(as.logical(n %% 2)){
  fvalue <- -(n+1)/2
} else {
  fvalue <- n/2
}
```

```{r}
jsonlite::fromJSON("https://www.dropbox.com/s/d14j5hp3i5ps657/examSubmissionTimes.json?dl=1") -> examSubmissionTime


head(examSubmissionTime$section)
head(examSubmissionTime$time)
```

```{r}
i<-1
student_i_section <- examSubmissionTime$section[[i]]
student_i_time <- examSubmissionTime$time[[i]]

deadline <- lubridate::ymd_hms("2020-05-27 15:00:00", tz="Asia/Taipei") # 

howEarly <- deadline - lubridate::ymd_hms(
  student_i_time, tz="Asia/Taipei") 
print(howEarly)
```
```{r}
student_i_section <- examSubmissionTime$section[[i]]
student_i_time <- examSubmissionTime$time[[i]]
```

```{r}
howEarly <- deadline - lubridate::ymd_hms(student_i_time, tz="Asia/Taipei")
print(howEarly)
```
```{r}
student_i_section=="56"
i<-1
student_i_section <- examSubmissionTime$section[[i]]
student_i_time <- examSubmissionTime$time[[i]]

if(student_i_section=="56"){
  deadline <- lubridate::ymd_hms("2020-05-27 15:00:00", tz="Asia/Taipei")
} else {
  deadline <- lubridate::ymd_hms("2020-05-27 17:00:00", tz="Asia/Taipei")
}

howEarly <- deadline - lubridate::ymd_hms(student_i_time, tz="Asia/Taipei")
print(howEarly)
```
```{r}
compute_howEarly <- function(student_i_section, student_i_time){
  # student_i_section <- examSubmissionTime$section[[i]]
  # student_i_time <- examSubmissionTime$time[[i]]
  
  if(student_i_section=="56"){
    deadline <- lubridate::ymd_hms("2020-05-27 15:00:00", tz="Asia/Taipei")
  } else {
    deadline <- lubridate::ymd_hms("2020-05-27 17:00:00", tz="Asia/Taipei")
  }
  
  howEarly <- deadline - lubridate::ymd_hms(student_i_time, tz="Asia/Taipei")
  # print(howEarly)
  
  return(howEarly)
}
```

```{r}
compute_howEarly(examSubmissionTime$section[[1]],examSubmissionTime$time[[1]])
compute_howEarly(examSubmissionTime$section[[2]],examSubmissionTime$time[[2]])
compute_howEarly(examSubmissionTime$section[[3]],examSubmissionTime$time[[3]])
```
```{r}
studentSequence <- 1:length(examSubmissionTime$section)
install.packages("purrr")
map(studentSequence,
    ~compute_howEarly(
      examSubmissionTime$section[[.x]],
      examSubmissionTime$time[[.x]])
    ) -> list_howEarly
```
```{r}
readline("請輸入你的成績（整數）： ") -> grade # 單獨執行
```

```{r}
if(grade >=90){
  print("優")
} else if(grade>=80 & grade<=89){
  print("良")
} else if(grade>=70 & grade<=79){
  print("尚可")
} else {
  print("待加強")
}
```

```{r}

```


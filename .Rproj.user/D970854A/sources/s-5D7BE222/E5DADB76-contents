---
title: '2020-05-15'
author: '"陳筱汶"'
date: "2020/5/15"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
```{r}
stringi::stri_locale_list()
```

```{r}
library(stringr)
```

```{r}
char1 <- c("Wild","Apple","Donald","May","Avocada") 
factor1 <- factor(char1)
levels(factor1)
```
```{r}
char2 <- c("蔡英文","習近平","Donald Trump","蔡頭") 
factor2 <- factor(char2)
levels(factor2)

sort(
  str_sub(char2,1,1)
)
sort(
  str_sub(char2,2,2)
)
sort(str_sub(char2,3,3))
```
```{r}
Sys.getlocale("LC_COLLATE")
```
```{r}
jsonlite::fromJSON("https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.json") -> covid19
```

```{r}
# 不可排序類別：性別、縣市、是否境外移入
covid19$`縣市` <- 
  factor(covid19$`縣市`)
covid19$`性別` <-
  factor(covid19$`性別`)
covid19$`是否為境外移入`<-
  factor(
    covid19$`是否為境外移入`
  )
# 可排序類別資料：年齡層
covid19$`年齡層` <-
  factor(
    covid19$`年齡層`,
    ordered=TRUE
  )
```

```{r}
levels(covid19$`縣市`)
levels(covid19$`性別`)
levels(covid19$`是否為境外移入`)
```
```{r}
covid19$`年齡層`
levels(covid19$`年齡層`)
```

```{r}
jsonlite::fromJSON(
  "https://www.dropbox.com/s/jckqryeh5zeat5w/regionPopulation.json?dl=1"
) -> population
unlist(population) -> population
```

```{r}
levels(covid19$`縣市`)->city_need
population[city_need]->population
population
```
```{r}
sort(population,decreasing = T)->population
names(population)->new_names
covid19$`縣市`<-factor(covid19$`縣市`,new_names)
covid19$`縣市`
```

```{r}
level_names<-levels(covid19$`年齡層`)
str_extract(level_names,"^[0-9]+")->starting_ages
starting_ages

```
```{r}
as.integer(starting_ages)->starting_ages
starting_ages
names(starting_ages)<-level_names
sort(starting_ages,decreasing = F)->starting_ages
starting_ages
```
```{r}
covid19$`年齡層`<-factor(covid19$`年齡層`,names(starting_ages))
covid19$`年齡層`
```
```{r}
factor1 <- factor(c("0-4歲","5-9歲","10歲以上","0-4歲","5-9歲","5-9歲","10歲以上"))
factor1
levels(factor1)<-c("0-9歲","10歲以上","0-9歲")
factor1
```
```{r}
covid19$`地區` <- covid19$`縣市`
levels(covid19$`地區`)
currentLevels <- levels(covid19$`地區`)
# 整併
north_regex <- "宜蘭縣|基隆市|[台臺]北市|新北市|桃園市|新竹市|新竹縣"
middle_regex <- "苗栗縣|[台臺]中市|彰化縣|南投縣|雲林縣"
south_regex <-
  "嘉義市|嘉義縣|[台臺]南[縣市]|高雄市|屏東縣|澎湖縣"
east_regex <- "花蓮縣|台東縣"
currentLevels <- str_replace(currentLevels, 
            north_regex, "北部")
currentLevels <- str_replace(currentLevels, 
            middle_regex, "中部")
currentLevels <- str_replace(currentLevels, 
            south_regex, "南部")
newLevels <- str_replace(currentLevels, 
            east_regex, "東部")
currentLevels <- str_replace(currentLevels, 
            north_regex, "北部")
currentLevels <- str_replace(currentLevels, 
            middle_regex, "中部")
currentLevels <- str_replace(currentLevels, 
            south_regex, "南部")
newLevels <- str_replace(currentLevels, 
            east_regex, "東部")
newLevels
```
```{r}
levels(covid19$`年齡層`)

# 創造10歲間距的所有可能
start <- seq(5, 55, by=10) # 由5到55，每個值差10的數值向量
end <- seq(14, 64, by=10)
middleLevels <- 
  rep(
    paste0(start,"-",end), 
    each=2) # 每個新間距要2個
newLevels <- c("4", middleLevels, "65+", "65+")

levels(covid19$`年齡層`) <- newLevels
covid19$`年齡層`
```

```{r}

```


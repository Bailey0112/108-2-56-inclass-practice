table_countsByArticle<- table(badEmployers$law)
table_countsByArticle
# mostViolatedArticle
class(table_countsByArticle)
# mostViolatedArticle
mostViolatedArticle<- max(table_countsByArticle)
mostViolatedArticle
# mostViolatedArticle
mostViolatedArticle<- max(table_countsByArticle)
mostViolatedArticle
names(mostViolatedArticle)
# mostViolatedArticle
mostViolatedArticle<- max(table_countsByArticle)
mostViolatedArticle
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
str(badEmployers$law)
mostViolatedArticle<- max(table_countsByArticle)
mostViolatedArticle
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
mostViolatedArticle<- max(table_countsByArticle)
mostViolatedArticle
badEmployers$law[[mostViolatedArticle]]
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
mostViolatedArticle<- max(table_countsByArticle)
mostViolatedArticle
badEmployers$law[mostViolatedArticle]
# mostViolatedArticle
mostViolatedArticle<- max(table_countsByArticle)
mostViolatedArticle
# mostViolatedArticle
mostViolatedArticle<- max(table_countsByArticle)
mostViolatedArticle
max_violatedArticle<-table_countsByArticle>=507
max_violatedArticle
# mostViolatedArticle
mostViolatedArticle<- max(table_countsByArticle)
mostViolatedArticle
max_violatedArticle<-table_countsByArticle>=507
max_violatedArticle
badEmployers$law[[max_violatedArticle]]
# mostViolatedArticle
mostViolatedArticle<- max(table_countsByArticle)
mostViolatedArticle
max_violatedArticle<-table_countsByArticle>=507
max_violatedArticle
badEmployers$law[max_violatedArticle]
# mostViolatedArticle
mostViolatedArticle<- max(table_countsByArticle)
mostViolatedArticle
max_violatedArticle<-table_countsByArticle>=507
max_violatedArticle
badEmployers$law[max_violatedArticle]
# mostViolatedArticle
mostViolatedArticle<- max(table_countsByArticle)
mostViolatedArticle
max_violatedArticle<-table_countsByArticle>=507
max_violatedArticle
table_countsByArticle[max_violatedArticle]
# mostViolatedArticle
mostViolatedArticle<- max(table_countsByArticle)
mostViolatedArticle
max_violatedArticle<-table_countsByArticle>=507
max_violatedArticle
table_countsByArticle[max_violatedArticle]
names(mostViolatedArticle)
# mostViolatedArticle
max_number<- max(table_countsByArticle)
max_number
max_lawname<-table_countsByArticle>=max_number
max_lawname
mostViolatedArticle<-list(max_lawname,max_number)
# mostViolatedArticle
max_number<- max(table_countsByArticle)
max_number
max_lawname<-table_countsByArticle>=max_number
max_lawname
mostViolatedArticle<-list(max_lawname,max_number)
mostViolatedArticle
# mostViolatedArticle
max_number<- max(table_countsByArticle)
max_number
max_lawname<-table_countsByArticle>=max_number
table_countsByArticle[max_lawname]
# mostViolatedArticle
max_number<- max(table_countsByArticle)
max_number
max_lawname<-table_countsByArticle>=max_number
table_countsByArticle[max_lawname]->mostViolatedArticle
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
max_number<- max(table_countsByArticle)
max_number
max_lawname<-table_countsByArticle>=max_number
table_countsByArticle[max_lawname]->mostViolatedArticle
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
mostViolatedArticle
# mostViolatedArticle_content
str(badEmployers$lawContent)
# mostViolatedArticle_content
unique_content<- unique(badEmployers$lawContent)
unique_content
# mostViolatedArticle_content
unique_content<- unique(badEmployers$lawContent)
table_content<-table(badEmployers$lawContent)
table_content
# mostViolatedArticle_content
unique_content<- unique(badEmployers$lawContent)
table_content<-table(badEmployers$lawContent)
table_content
max_content<- max(table_content)
max_content
# mostViolatedArticle_content
unique_content<- unique(badEmployers$lawContent)
table_content<-table(badEmployers$lawContent)
table_content
max_content<- max(table_content)
max_content
name_content<-table_content>=max_content
mostViolatedArticle_content<-badEmployers$lawContent[name_content]
mostViolatedArticle_content
# mostViolatedArticle_content
table_content<-table(badEmployers$lawContent)
table_content
max_content<- max(table_content)
# mostViolatedArticle_content
table_content<-table(badEmployers$lawContent)
max_content<- max(table_content)
max_content
# mostViolatedArticle_content
table_content<-table(badEmployers$lawContent)
max_content<- max(table_content)
max_content
a<-table_content>=max_content
mostViolatedArticle_content<-badEmployers$lawContent[a]
mostViolatedArticle_content
# mostViolatedArticle_content
table_content<-table(badEmployers$lawContent)
mostViolatedArticle_content<-table_content[max_lawname]
mostViolatedArticle_content
# mostViolatedArticle_content
table_content<-table(badEmployers$lawContent)
max_content<-max(table_content)
max_content
# mostViolatedArticle_content
table_content<-table(badEmployers$lawContent)
max_content<-max(table_content)
max_content
max_contentname<-table_content>=max_content
mostViolatedArticle_content<-table_content[max_contentname]
mostViolatedArticle_content
# popularSentenceMonth
uni_dt<-unique(badEmployers$dt)
# popularSentenceMonth
uni_dt<-unique(badEmployers$dt)
uni_dt
# popularSentenceMonth
table_dt<-table(badEmployers$dt)
table_dt
# popularSentenceMonth
table_dt<-table(badEmployers$dt)
max_dt<-max(table_dt)
max_dt
# popularSentenceMonth
table_dt<-table(badEmployers$dt)
max_dt<-max(table_dt)
max_dt
table_dt>=max_dt->a
popu_day<-badEmployers$dt[a]
popu_day
# popularSentenceMonth
table_dt<-table(badEmployers$dt)
max_dt<-max(table_dt)
max_dt
# popularSentenceMonth
table_dt<-table(badEmployers$dt)
table_dt
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
# chinese
levels(table$國文)
# chinese
class(table)
# chinese
class(table$級分)
# chinese
class(table$`級分`)
# chinese
table$`國文`<-ordered(table$`國文`)
class(table$`國文`)
# chinese
table$`國文`<-ordered(table$`國文`)
class(table$`國文`)
chinese<-table$`國文`+1
# chinese
table$`國文`<-ordered(table$`國文`)
class(table$`國文`)
chinese<-table$`國文`
# ntpu_namelist
ntpu_namelist<- stringr::str_detect(namelist,"北大")
ntpu_namelist
# ntpu_namelist
ntpu_namelist<- stringr::str_detect(students10$`志願`,"北大")
ntpu_namelist
# ntpu_namelist
namelist<- stringr::str_detect(students10$`志願`,"北大")
ntpu_namelist<-students10$`志願`[namelist]
ntpu_namelist
# ntpu_namelist
namelist<- stringr::str_detect(students10$`志願`,"北大")
ntpu_namelist<-students10$`姓名`[namelist]
ntpu_namelist
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
rank_1
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
ntpu_namelist[rank_1]
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
ntpu_namelist[rank_1]->passone
passone
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
ntpu_namelist[rank_1]->passone
students10$`姓名`
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
ntpu_namelist[rank_1]->passone
passone
students10$`姓名`
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
ntpu_namelist[rank_1]->passone
passone
students10$`姓名`
student_passone<-students10[c(1,2,5,8,9)]
student_passone
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
ntpu_namelist[rank_1]->passone
passone
students10$`姓名`
k<-c(T,T,F,F,T,F,F,T,T,F)
student_passone<-students10[K]
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
ntpu_namelist[rank_1]->passone
passone
students10$`姓名`
k<-c(T,T,F,F,T,F,F,T,T,F)
student_passone<-students10[k]
student_passone
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
ntpu_namelist[rank_1]->passone
passone
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
# popularSentenceMonth
str(badEmployers$dt)
# popularSentenceMonth
str(badEmployers$dt)
table(badEmployers$dt)
# popularSentenceMonth
str(badEmployers$dt)
as.integer(badEmployers$dt)
# popularSentenceMonth
str(badEmployers$dt)
as.integer(badEmployers$dt)
# popularSentenceMonth
str(badEmployers$dt)
ymd_hms(badEmployers$dt,tz="UTC")-> badEmployers$dt
# popularSentenceMonth
str(badEmployers$dt)
ymd(badEmployers$dt,tz="UTC")-> badEmployers$dt
# popularSentenceMonth
str(badEmployers$dt)
ymd(badEmployers$dt)-> badEmployers$dt
# popularSentenceMonth
str(badEmployers$dt)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
# popularSentenceMonth
str(badEmployers$dt)
# popularSentenceMonth
str(badEmployers$dt)
library(lubridate)
date_time<-badEmployers$dt
ymd(date_time,tz="UtC")
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
# chinese
as.factor(table$`國文`)
table$`國文`<-ordered(table$`國文`)
class(table$`國文`)
chinese<-table$`國文`
# chinese
as.factor(table$`國文`)
table$`國文`<-ordered(table$`國文`)
table$`級分`+1
class(table$`國文`)
chinese<-table$`國文`
# chinese
as.factor(table$`國文`)
table$`國文`<-ordered(table$`國文`)
table$`級分`+1->table$`級分`
class(table$`國文`)
chinese<-table$`國文`
# chinese
as.factor(table$`國文`)
table$`國文`<-ordered(table$`國文`)
table$`級分`+1->table$`級分`
chinese<-table$`國文`
chinese
# chinese
as.factor(table$`國文`)
table$`國文`<-ordered(table$`國文`)
table$`級分`+1->table$`級分`
chinese<-table$`國文`
chinese
table$`級分`
table$`國文`
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
# chinese
as.factor(table$`國文`)
table$`國文`<-ordered(table$`國文`)
table$`級分`+1->table$`級分`
chinese<-table$`國文`
chinese
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
# chinese
as.factor(table$`國文`)->chinese
table$`國文`<-ordered(table$`國文`)
table$`級分`+1->table$`級分`
chinese
# ntpu_namelist
namelist<- stringr::str_detect(students10$`志願`,"北大")
ntpu_namelist<-students10$`姓名`[namelist]
ntpu_namelist
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
ntpu_namelist[rank_1]->passone
passone
students10$`英文`+students10$`數學`->Eng_Math
Eng_Math
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
ntpu_namelist[rank_1]->passone
passone
students10$`英文`+students10$`數學`->Eng_Math
Eng_Math[passone]->passtwo
passtwo
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
ntpu_namelist[rank_1]->passone
passone
students10$`英文`+students10$`數學`->Eng_Math
Eng_Math>=26->rank_2
rank_2
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
ntpu_namelist[rank_1]->passone
passone
students10$`英文`+students10$`數學`->Eng_Math
Eng_Math>=26->rank_2
rank_2
students10[rank_2]->passtwo
passtwo
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
ntpu_namelist[rank_1]->passone
passone
students10$`英文`+students10$`數學`->Eng_Math
Eng_Math>=26->rank_2
rank_2
ntpu_namelist[rank_2]->passtwo
passtwo
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
ntpu_namelist[rank_1]->passone
passone
ntpu_namelist$`英文`+students10$`數學`->Eng_Math
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
rank_1
ntpu_namelist[rank_1]->passone
passone
ntpu_namelist$`英文`+students10$`數學`->Eng_Math
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
rank_1
ntpu_namelist[rank_1]->passone
passone
students10[passone]->student_passone
student_passone
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
rank_1
ntpu_namelist[rank_1]->passone
passone
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
rank_1
ntpu_namelist[rank_1]->passone
passone
students10$`英文`[namelist][rank_1]->rank1_eng
students10$`數學`[namelist][rank_1]->rank1_math
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
rank_1
ntpu_namelist[rank_1]->passone
passone
students10$`英文`[namelist][rank_1]->rank1_eng
students10$`數學`[namelist][rank_1]->rank1_math
rank1_eng+rank1_math>=26->rank_2
rank_2
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
rank_1
ntpu_namelist[rank_1]->passone
passone
students10$`英文`[namelist][rank_1]->rank1_eng
students10$`數學`[namelist][rank_1]->rank1_math
rank1_eng+rank1_math>=26->rank_2
rank_2
passone[rank_2]->ntpu_econtpu_eco
ntpu_econtpu_eco
# ntpu_econtpu_eco
students10$`國文`[namelist]>=12 -> rank_1
ntpu_namelist[rank_1]->passone
students10$`英文`[namelist][rank_1]->rank1_eng
students10$`數學`[namelist][rank_1]->rank1_math
rank1_eng+rank1_math>=26->rank_2
passone[rank_2]->ntpu_econtpu_eco
ntpu_econtpu_eco
# congrats
pick_fromstudents10<-students10$`姓名` %in% ntpu_econtpu_eco
pick_fromstudents10
# congrats
pick_fromstudents10<-students10$`姓名` %in% ntpu_econtpu_eco
pick_fromstudents10
e<-"恭喜"
paste0(e,ntpu_econtpu_eco)->f
g<-"同學錄取國立臺北大學經濟系"
paste0(f,g)-> congrats
congrats
# congrats
pick_fromstudents10<-students10$`姓名` %in% ntpu_econtpu_eco
e<-"恭喜"
paste0(e,ntpu_econtpu_eco)->f
g<-"同學錄取國立臺北大學經濟系"
paste0(f,g)-> congrats
congrats
class(congrats)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
# violatedArticles
violatedArticles<-unique(badEmployers$law)
violatedArticles
# table_countsByArticle
table_countsByArticle<- table(badEmployers$law)
table_countsByArticle
# mostViolatedArticle
max_number<- max(table_countsByArticle)
max_number
max_lawname<-table_countsByArticle>=max_number
table_countsByArticle[max_lawname]->mostViolatedArticle
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
mostViolatedArticle
# mostViolatedArticle
max_number<- max(table_countsByArticle)
max_lawname<-table_countsByArticle>=max_number
table_countsByArticle[max_lawname]->mostViolatedArticle
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
mostViolatedArticle
# mostViolatedArticle_content
table_content<-table(badEmployers$lawContent)
max_content<-max(table_content)
max_contentname<-table_content>=max_content
mostViolatedArticle_content<-table_content[max_contentname]
mostViolatedArticle_content
# congrats
pick_fromstudents10<-students10$`姓名` %in% ntpu_econtpu_eco
e<-"恭喜"
paste0(e,ntpu_econtpu_eco)->f
g<-"同學錄取國立臺北大學經濟系"
paste0(f,g)-> congrats
congrats
# chinese
as.factor(table$`國文`)->chinese
table$`國文`<-ordered(table$`國文`)
table$`級分`+1->table$`級分`
chinese
print(tablec("級分","國文"))
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
# chinese
as.factor(table$`國文`)->chinese
table$`國文`<-ordered(table$`國文`)
table$`級分`+1->table$`級分`
chinese
print(table[c("級分","國文")])

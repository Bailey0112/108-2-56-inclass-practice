currentLevels <- str_replace(currentLevels,
north_regex, "北部")
currentLevels <- str_replace(currentLevels,
middle_regex, "中部")
currentLevels <- str_replace(currentLevels,
south_regex, "南部")
newLevels <- str_replace(currentLevels,
east_regex, "東部")
currentLevels <- str_replace(currentLevels,
north_regex, "北部")
currentLevels <- str_replace(currentLevels,
middle_regex, "中部")
currentLevels <- str_replace(currentLevels,
south_regex, "南部")
newLevels <- str_replace(currentLevels,
east_regex, "東部")
newLevels
levels(covid19$年齡層)
# 創造10歲間距的所有可能
start <- seq(5, 55, by=10) # 由5到55，每個值差10的數值向量
end <- seq(14, 64, by=10)
middleLevels <-
rep(
paste0(start,"-",end),
each=2) # 每個新間距要2個
newLevels <- c("4", middleLevels, "65+", "65+")
levels(covid19$年齡層) <- newLevels
covid19$年齡層
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
# studentHeights
str(studentHeights)
# studentHeights
str(studentHeights)
# studentHeights
str(studentHeights)
# studentHeights
factor(studentHeights$`學年度`)
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights
ordered(studentHeights$`年齡`)->studentHeights
levels(studentHeights$`學年度`,decreasing=F)->studentHeights
levels(studentHeights$`年齡`, decreasing=F)-> studentHeights
studentHeights
knitr::opts_chunk$set(echo = TRUE)
char2 <- c("蔡英文","習近平","Donald Trump","蔡頭")
factor2 <- factor(char2)
levels(factor2)
sort(
str_sub(char2,1,1)
)
sort(
str_sub(char2,2,2)
)
sort(str_sub(char2,3,3))
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights
ordered(studentHeights$`年齡`)->studentHeights
levels(studentHeights$`學年度`,decreasing=F)->studentHeights
levels(studentHeights$`年齡`, decreasing=F)-> studentHeights
studentHeights
str(studentHeights)
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights
ordered(studentHeights$`年齡`)->studentHeights
sort(studentHeights$`學年度`,decreasing=F)->studentHeights
sort(studentHeights$`年齡`, decreasing=F)-> studentHeights
studentHeights
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights
ordered(studentHeights$`年齡`)->studentHeights
sort(studentHeights$`學年度`,decreasing=F)->studentHeights
sort(studentHeights$`年齡`, decreasing=F)-> studentHeights
studentHeights
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights
ordered(studentHeights$`年齡`)->studentHeights
sort(studentHeights$`學年度`,decreasing=F)->studentHeights
sort(studentHeights$`年齡`, decreasing=F)-> studentHeights
studentHeights
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights
ordered(studentHeights$`年齡`)->studentHeights
sort(studentHeights$`學年度`,decreasing=F)->studentHeights
sort(studentHeights$`年齡`, decreasing=F)-> studentHeights
studentHeights
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
View(studentHeights)
View(studentHeights)
# studentHeights$`年齡層`
levels(studentHeights)
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights
ordered(studentHeights$`年齡`)->studentHeights
sort(studentHeights$`學年度`,decreasing=F)->studentHeights
sort(studentHeights$`年齡`, decreasing=F)-> studentHeights
studentHeights
# studentHeights$`年齡層`
levels(studentHeights)
knitr::opts_chunk$set(echo = TRUE)
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
str(studentHeights)
names(studentHeights)
names(studentHeights)->name_student
levels(name_student)
names(studentHeights)->name_student
names(studentHeights)->name_student
name_student
names(studentHeights)->name_student
name_student
levels(name_student)
names(studentHeights)->name_student
studentHeights<-[年齡層]
names(studentHeights)->name_student
studentHeights<-c(年齡層)
names(studentHeights)->name_student
studentHeights<-c("年齡層")
names(studentHeights)->name_student
studentHeights<-c("年齡層")
names(studentHeights)
names(studentHeights)->name_student
levels(studentHeights)
levels(studentHeights)
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
levels(studentHeights)
levels(studentHeights)
levels(studentHeights$`學年度`)
str(studentHeights)
ordered(studentHeights)
levels(studentHeights$`學年度`)
str(studentHeights)
ordered(studentHeights$`學年度`)->studentHeights
ordered(studentHeights$`年齡`)->studentHeights
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
str(studentHeights)
ordered(studentHeights$`學年度`)->studentHeights
ordered(studentHeights$`年齡`)->studentHeights
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights$`學年度`
levels(studentHeights$`學年度`)
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights$`學年度`
levels(studentHeights$`學年度`)
sort(studentHeights$`學年度`,decreasing=F)
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights$`學年度`
levels(studentHeights$`學年度`)
sort(studentHeights$`學年度`,decreasing=F)->studentHeights$`學年度`
studentHeights$`學年度`
View(studentHeights)
View(studentHeights)
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights$`學年度`
levels(studentHeights$`學年度`)
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights$`學年度`
levels(studentHeights$`學年度`)->level_years
names(level_year)
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights$`學年度`
levels(studentHeights$`學年度`)->level_years
names(level_years)
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights$`學年度`
levels(studentHeights$`學年度`)->level_years
new_years<-as.integer(level_years)
names(new_years)
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights$`學年度`
levels(studentHeights$`學年度`)->level_years
new_years<-as.integer(level_years)
new_years
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights$`學年度`
levels(studentHeights$`學年度`)->level_years
new_years<-as.integer(level_years)
sort(new_years,decreasing = F)->new_years
new_years
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights$`學年度`
levels(studentHeights$`學年度`)->level_years
new_years<-as.integer(level_years)
sort(new_years,decreasing = F)->new_years
studentHeights$`學年度`<-factor(studentHeights$`學年度`,new_years)
studentHeights$`學年度`
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights$`學年度`
levels(studentHeights$`學年度`)->level_years
new_years<-as.integer(level_years)
sort(new_years,decreasing = F)->new_years
studentHeights$`學年度`<-factor(studentHeights$`學年度`,new_years)
studentHeights$`學年度`
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights$`學年度`
levels(studentHeights$`學年度`)->level_years
new_years<-as.integer(level_years)
sort(new_years,decreasing = F)->new_years
names(new_years)->level_years
studentHeights$`學年度`<-factor(studentHeights$`學年度`,new_years)
studentHeights$`學年度`
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
View(studentHeights)
View(studentHeights)
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights$`學年度`
levels(studentHeights$`學年度`)->level_years
new_years<-as.integer(level_years)
sort(new_years,decreasing = F)->new_years
studentHeights$`學年度`<-factor(studentHeights$`學年度`,new_years)
studentHeights$`學年度`
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
# studentHeights
ordered(studentHeights$`學年度`)->studentHeights$`學年度`
ordered(studentHeights$`年齡`)->studentHeights$`年齡`
levels(studentHeights$`學年度`)->level_years
new_years<-as.integer(level_years)
sort(new_years,decreasing = F)->new_years
studentHeights$`學年度`<-factor(studentHeights$`學年度`,new_years)
studentHeights
# studentHeights$`年齡層`
ordered(studentHeights$`年齡層`)->studentHeights$`年齡層`
level_ages<-levels(studentHeights$`年齡層`)
starting_ages<-str_extract(level_ages,"^[0-9]+")
as.integer(starting_ages)->starting_ages
names(starting_ages)<-level_ages
sort(starting_ages,decreasing = F)->starting_ages
studentHeights$`年齡層`<-factor(studentHeights$`年齡層`,names(starting_ages))
studentHeights$`年齡層`
# studentHeights$`年齡層`
ordered(studentHeights$`年齡層`)->studentHeights$`年齡層`
library(stringr)
level_ages<-levels(studentHeights$`年齡層`)
starting_ages<-str_extract(level_ages,"^[0-9]+")
as.integer(starting_ages)->starting_ages
names(starting_ages)<-level_ages
sort(starting_ages,decreasing = F)->starting_ages
studentHeights$`年齡層`<-factor(studentHeights$`年齡層`,names(starting_ages))
studentHeights$`年齡層`
# averageHeightByGroup
pick_6<-str_extract(studentHeights$`年齡層`,"6")
pick_6
# averageHeightByGroup
pick_6<-str_extract(studentHeights$`年齡層`,"6")
studentHeights$`平均身高`[pick_6]->height_6
height_6
# averageHeightByGroup
pick_6<-str_extract(studentHeights$`年齡層`,"(6|8)")
studentHeights$`平均身高`[pick_6]->height_6
height_6
# averageHeightByGroup
as.numeric(studentHeights$`年齡層`)
pick_6<-str_extract(studentHeights$`年齡層`,"(6|8)")
studentHeights$`平均身高`[pick_6]->height_6
height_6
# averageHeightByGroup
pick_6<-str_extract(studentHeights$`年齡層`,"^6")
studentHeights$`平均身高`[pick_6]->height_6
height_6
# averageHeightByGroup
pick_6<-str_extract(studentHeights$`年齡層`,"^6")
# averageHeightByGroup
pick_6<-str_extract(studentHeights$`年齡層`,"6")
# averageHeightByGroup
pick_6<-str_detect(studentHeights$`年齡層`,"6")
# averageHeightByGroup
pick_6<-str_detect(studentHeights$`年齡層`,"6")
pick_6
# averageHeightByGroup
pick_6<-str_detect(studentHeights$`年齡層`,"6")
studentHeights$`平均身高`[pick_6]->height_6
height_6
# averageHeightByGroup
pick_6<-str_detect(studentHeights$`年齡層`,"6")
studentHeights$`平均身高`[pick_6]->height_6
mean(height_6)->mean_6
mean_6
# averageHeightByGroup
pick_6<-str_detect(studentHeights$`年齡層`,"6")
studentHeights$`平均身高`[pick_6]->height_6
mean(height_6)->mean_6
pick_9<-str_detect(studentHeights$`年齡層`,"9")
studentHeights$`平均身高`[pick_9]->height_9
mean(height_9)->mean_9
pick_13<-str_detect(studentHeights$`年齡層`,"13")
studentHeights$`平均身高`[pick_13]->height_13
mean(height_13)->mean_13
averageHeightByGroup<-c(mean_6,mean_9,mean_13)
averageHeightByGroup
# averageHeightByGroup
pick_6<-str_detect(studentHeights$`年齡層`,"6")
studentHeights$`平均身高`[pick_6]->height_6
mean(height_6)->mean_6
pick_9<-str_detect(studentHeights$`年齡層`,"9")
studentHeights$`平均身高`[pick_9]->height_9
mean(height_9)->mean_9
pick_13<-str_detect(studentHeights$`年齡層`,"13")
studentHeights$`平均身高`[pick_13]->height_13
mean(height_13)->mean_13
averageHeightByGroup<-list("6-8"=mean_6,"9-12"=mean_9,"13-15"=mean_13)
averageHeightByGroup
# heightDifferenceByGroup
#6-8歲男生平均身高-女生平均身高
str_detect(studentHeights$`類別`,"女")->pick_F
studentHeights$`平均身高`[pick_6|pick_F]->pick_6F
pick_6F
# heightDifferenceByGroup
#6-8歲男生平均身高-女生平均身高
str_detect(studentHeights$`類別`,"女")->pick_F
mean(studentHeights$`平均身高`[pick_6|pick_F])->mean_6F
mean_6F
# heightDifferenceByGroup
#6-8歲女生平均身高
str_detect(studentHeights$`類別`,"女")->pick_F
mean(studentHeights$`平均身高`[pick_6|pick_F])->mean_6F
str_detect(studentHeights$`類別`,"男")->pick_M
mean(studentHeights$`平均身高`[pick_6|pick_M])->mean_6M
mean_6MF<-mean_6M-mean_6F
mean_6MF
# heightDifferenceByGroup
#6-8歲
str_detect(studentHeights$`類別`,"女")->pick_F
mean(studentHeights$`平均身高`[pick_6|pick_F])->mean_6F
str_detect(studentHeights$`類別`,"男")->pick_M
mean(studentHeights$`平均身高`[pick_6|pick_M])->mean_6M
mean_6MF<-mean_6M-mean_6F
mean_6MF
#9-12歲
mean(studentHeights$`平均身高`[pick_9|pick_F])->mean_9F
mean(studentHeights$`平均身高`[pick_9|pick_M])->mean_9M
mean_9MF<-mean_9M-mean_9F
mean_9MF
#13-15歲
mean(studentHeights$`平均身高`[pick_13|pick_F])->mean_13F
mean(studentHeights$`平均身高`[pick_13|pick_M])->mean_13M
mean_13MF<-mean_13M-mean_13F
mean_13MF
# heightDifferenceByGroup
#6-8歲
str_detect(studentHeights$`類別`,"女")->pick_F
mean(studentHeights$`平均身高`[pick_6|pick_F])->mean_6F
str_detect(studentHeights$`類別`,"男")->pick_M
mean(studentHeights$`平均身高`[pick_6|pick_M])->mean_6M
mean_6MF<-mean_6M-mean_6F
mean_6MF
#9-12歲
mean(studentHeights$`平均身高`[pick_9|pick_F])->mean_9F
mean(studentHeights$`平均身高`[pick_9|pick_M])->mean_9M
mean_9MF<-mean_9M-mean_9F
mean_9MF
#13-15歲
mean(studentHeights$`平均身高`[pick_13|pick_F])->mean_13F
mean(studentHeights$`平均身高`[pick_13|pick_M])->mean_13M
mean_13MF<-mean_13M-mean_13F
mean_13MF
heightDifferenceByGroup<- list("6-8"=mean_6MF,"9-12"=mean_9MF,"13-15"=mean_13MF)
heightDifferenceByGroup
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
str(differentMajors)
# realEstateRegex
realEstateRegex<-"[\u4E00-\u9FFF]"
realEstateRegex
# realEstateRegex
realEstateRegex<-"不動產與城鄉環境學系"
str_replace(differentMajors,realEstateRegex,"不動系")
# realEstateRegex
realEstateRegex<-"(?<=不)[\u4E00-\u9FFF](?=系)"
str_replace(differentMajors,realEstateRegex,"不動系")
# realEstateRegex
realEstateRegex<-str_extract(differentMajors,"不動")
str_replace(differentMajors,realEstateRegex,"不動系")
# realEstateRegex
realEstateRegex<-glue::glue("(?<=不動)[:graph:](?=系)")
str_replace(differentMajors,realEstateRegex,"不動系")
# realEstateRegex
realEstateRegex<-glue::glue("不動?")
str_replace(differentMajors,realEstateRegex,"不動系")
# realEstateRegex
realEstateRegex<-不(?=動)
str_replace(differentMajors,realEstateRegex,"不動系")
# realEstateRegex
realEstateRegex<-"不(?=動)"
str_replace(differentMajors,realEstateRegex,"不動系")
# realEstateRegex
realEstateRegex<-"不動?"
str_replace(differentMajors,realEstateRegex,"不動系")
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
str(differentMajors)
# realEstateRegex
realEstateRegex<-"(不動產城鄉學系|不動系系|不動系產與城鄉環境學系|不動系產城鄉學系)"
str_replace(differentMajors,realEstateRegex,"不動系")
# realEstateRegex
realEstateRegex<-"(不動產城鄉學系|不動系系|不動系產與城鄉環境學系|不動系產城鄉學系|不動產與城鄉環境學系)"
str_replace(differentMajors,realEstateRegex,"不動系")
# realEstateRegex
str_extract(differentMajors,"不動")->realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
# realEstateRegex
differentMajors"不動{n}"->realEstateRegex
# realEstateRegex
realEstateRegex<-str_detect(differentMajors,"不動")
str_replace(differentMajors,realEstateRegex,"不動系")
# realEstateRegex
realEstateRegex<-"(不動產城鄉學系|不動系系|不動系產與城鄉環境學系|不動系產城鄉學系|不動產與城鄉環境學系)"
str_replace(differentMajors,realEstateRegex,"不動系")
# currentLevels
factor(differentMajors)->currentLevels
currentLevels
# currentLevels
as.factor(differentMajors)->differentMajors
levels(differentMajors)->currentLevels
currentLevels
# realEstateRegex
realEstateRegex<-"(不動產城鄉學系|不動系系|不動系產與城鄉環境學系|不動系產城鄉學系|不動產與城鄉環境學系)"
str_replace(differentMajors,realEstateRegex,"不動系")
# currentLevels
as.factor(differentMajors)->differentMajors
levels(differentMajors)->currentLevels
currentLevels
# bSchoolRegex
bSchoolRegex<-"(休閒與運動管理學系|休運系|金融系|金融與合作經營學系|金融與合作學系)"
# bSchoolRegex
bSchoolRegex<-"(休閒與運動管理學系|休運系|金融系|金融與合作經營學系|金融與合作學系)"
bSchoolRegex
str_replace(currentLevels,bSchoolRegex,"商學院")
# differentMajors
currentLevels<-c("不動系","不動系","不動系","公行系","公行系",
"公行系","休運系","休運系","社工系","社工系",
"社會系","社會系","金融系","金融系","金融系",
"經濟系","經濟系")
differentMajors<-currentLevels
differentMajors
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
# realEstateRegex
realEstateRegex<-"(不動產城鄉學系|不動系系|不動系產與城鄉環境學系|不動系產城鄉學系|不動產與城鄉環境學系)"
realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
# currentLevels
as.factor(differentMajors)->differentMajors
levels(differentMajors)->currentLevels
currentLevels
# bSchoolRegex
bSchoolRegex<-"(休閒與運動管理學系|休運系|金融系|金融與合作經營學系|金融與合作學系)"
bSchoolRegex
str_replace(currentLevels,bSchoolRegex,"商學院")
# differentMajors
levels(differentMajors)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
factor1 <- factor(c("新北市","台北市","台中市","彰化市","基隆市","苗栗縣","苗栗縣"))
factor1
# differentMajors
levels(differentMajors)<-c("不動系","不動系","不動系","公行系","公行系",
"公行系","休運系","休運系","社工系","社工系",
"社會系","社會系","金融系","金融系","金融系",
"經濟系","經濟系")
differentMajors
# school
levels(differentMajors)->change_levels
regex_a="休運系|金融系"
regex_b="經濟系|社會系|社工系"
regex_c="公行系|不動系"
change_levels<-str_replace(change_levels,regex_a,"商學院")
change_levels<-str_replace(change_levels,regex_b,"社科院")
school<-str_replace(change_levels,regex_c,"公共事務學院")
levels(school)
# school
levels(differentMajors)->change_levels
regex_a="休運系|金融系"
regex_b="經濟系|社會系|社工系"
regex_c="公行系|不動系"
change_levels<-str_replace(change_levels,regex_a,"商學院")
change_levels<-str_replace(change_levels,regex_b,"社科院")
school<-str_replace(change_levels,regex_c,"公共事務學院")
# school
levels(differentMajors)->change_levels
regex_a="休運系|金融系"
regex_b="經濟系|社會系|社工系"
regex_c="公行系|不動系"
change_levels<-str_replace(change_levels,regex_a,"商學院")
change_levels<-str_replace(change_levels,regex_b,"社科院")
school<-str_replace(change_levels,regex_c,"公共事務學院")
ordered(school)->school
levels(school)
# school
levels(differentMajors)->change_levels
regex_a="休運系|金融系"
regex_b="經濟系|社會系|社工系"
regex_c="公行系|不動系"
change_levels<-str_replace(change_levels,regex_a,"商學院")
change_levels<-str_replace(change_levels,regex_b,"社科院")
school<-str_replace(change_levels,regex_c,"公共事務學院")
ordered(as.factor(school))->school
levels(school)
# school
levels(differentMajors)->change_levels
regex_a="休運系|金融系"
regex_b="經濟系|社會系|社工系"
regex_c="公行系|不動系"
change_levels<-str_replace(change_levels,regex_a,"商學院")
change_levels<-str_replace(change_levels,regex_b,"社科院")
school<-str_replace(change_levels,regex_c,"公共事務學院")
as.factor(school)->school
levels(school)
